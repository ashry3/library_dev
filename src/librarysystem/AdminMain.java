package librarysystem;

import java.awt.Color;
import java.io.File;
import java.io.IOException;
import javax.swing.JOptionPane;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.Clip;
import javax.sound.sampled.LineUnavailableException;
import javax.sound.sampled.UnsupportedAudioFileException;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author lenovo
 */
public class AdminMain extends javax.swing.JFrame {

    /**
     * Creates new form AdminMain
     */
    public AdminMain() {
        initComponents();
        jTable1.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BG = new javax.swing.JPanel();
        TopSide = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        BookSectiontop = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        IssueSectiontop = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        LogOut = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        DownSide = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        Home = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        BookSectionDown = new javax.swing.JPanel();
        jButton9 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        contacttxt = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        nametxt = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        passtxt = new javax.swing.JTextField();
        citytxt = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        emailtxt = new javax.swing.JTextField();
        addresstxt = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        salarytxt = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButton6 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        BG.setBackground(new java.awt.Color(255, 255, 255));

        TopSide.setBackground(new java.awt.Color(13, 71, 161));

        jLabel2.setBackground(new java.awt.Color(13, 71, 161));
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/librarysystem/Images/user-gear.png"))); // NOI18N

        BookSectiontop.setBackground(new java.awt.Color(237, 236, 236));
        BookSectiontop.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BookSectiontopMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                BookSectiontopMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                BookSectiontopMouseExited(evt);
            }
        });

        jLabel4.setBackground(new java.awt.Color(199, 239, 239));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/librarysystem/Images/add (2).png"))); // NOI18N

        jLabel5.setBackground(new java.awt.Color(204, 204, 204));
        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(17, 56, 247));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Librarin Section");

        javax.swing.GroupLayout BookSectiontopLayout = new javax.swing.GroupLayout(BookSectiontop);
        BookSectiontop.setLayout(BookSectiontopLayout);
        BookSectiontopLayout.setHorizontalGroup(
            BookSectiontopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        BookSectiontopLayout.setVerticalGroup(
            BookSectiontopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BookSectiontopLayout.createSequentialGroup()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 16, Short.MAX_VALUE)
                .addGap(12, 12, 12))
        );

        IssueSectiontop.setBackground(new java.awt.Color(237, 236, 236));
        IssueSectiontop.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                IssueSectiontopMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                IssueSectiontopMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                IssueSectiontopMouseExited(evt);
            }
        });

        jLabel6.setBackground(new java.awt.Color(204, 204, 204));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/librarysystem/Images/edit (1).png"))); // NOI18N

        jLabel7.setBackground(new java.awt.Color(204, 204, 204));
        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 26, 114));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Edit Librarin");

        javax.swing.GroupLayout IssueSectiontopLayout = new javax.swing.GroupLayout(IssueSectiontop);
        IssueSectiontop.setLayout(IssueSectiontopLayout);
        IssueSectiontopLayout.setHorizontalGroup(
            IssueSectiontopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        IssueSectiontopLayout.setVerticalGroup(
            IssueSectiontopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(IssueSectiontopLayout.createSequentialGroup()
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 16, Short.MAX_VALUE)
                .addGap(12, 12, 12))
        );

        LogOut.setBackground(new java.awt.Color(237, 236, 236));
        LogOut.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                LogOutMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                LogOutMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                LogOutMouseExited(evt);
            }
        });

        jLabel8.setBackground(new java.awt.Color(204, 204, 204));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/librarysystem/Images/close.png"))); // NOI18N

        jLabel9.setBackground(new java.awt.Color(204, 204, 204));
        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(26, 35, 126));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Log out");

        javax.swing.GroupLayout LogOutLayout = new javax.swing.GroupLayout(LogOut);
        LogOut.setLayout(LogOutLayout);
        LogOutLayout.setHorizontalGroup(
            LogOutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        LogOutLayout.setVerticalGroup(
            LogOutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LogOutLayout.createSequentialGroup()
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 22, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Admin Mangement");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Returners");

        javax.swing.GroupLayout TopSideLayout = new javax.swing.GroupLayout(TopSide);
        TopSide.setLayout(TopSideLayout);
        TopSideLayout.setHorizontalGroup(
            TopSideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TopSideLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(TopSideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(TopSideLayout.createSequentialGroup()
                        .addComponent(BookSectiontop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(208, 208, 208)
                        .addComponent(IssueSectiontop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(237, 237, 237)
                        .addComponent(LogOut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(59, 59, 59))
                    .addGroup(TopSideLayout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(TopSideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 658, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(81, 81, 81))))
        );
        TopSideLayout.setVerticalGroup(
            TopSideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TopSideLayout.createSequentialGroup()
                .addGroup(TopSideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(TopSideLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2))
                    .addGroup(TopSideLayout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addGroup(TopSideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(BookSectiontop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(IssueSectiontop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LogOut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15))
        );

        DownSide.setBackground(new java.awt.Color(255, 255, 255));
        DownSide.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Home.setBackground(new java.awt.Color(255, 255, 255));

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/librarysystem/Images/4207 (Custom).jpg"))); // NOI18N

        javax.swing.GroupLayout HomeLayout = new javax.swing.GroupLayout(Home);
        Home.setLayout(HomeLayout);
        HomeLayout.setHorizontalGroup(
            HomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 911, Short.MAX_VALUE)
        );
        HomeLayout.setVerticalGroup(
            HomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HomeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 476, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("tab1", Home);

        BookSectionDown.setBackground(new java.awt.Color(255, 255, 255));

        jButton9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/librarysystem/Images/delete.png"))); // NOI18N
        jButton9.setText("Delete");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/librarysystem/Images/read.png"))); // NOI18N
        jButton8.setText("View");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton10.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/librarysystem/Images/broom.png"))); // NOI18N
        jButton10.setText("Clear");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Name", "Password", "Email", "Address", "City", "Contact", "salary"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel11.setText("Contact No:");

        jLabel12.setBackground(new java.awt.Color(0, 0, 0));
        jLabel12.setText("Name:");

        jLabel13.setText("Address :");

        contacttxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                contacttxtActionPerformed(evt);
            }
        });

        jLabel14.setText("Email :");

        jLabel15.setText("City:");

        passtxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passtxtActionPerformed(evt);
            }
        });

        citytxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                citytxtActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/librarysystem/Images/add.png"))); // NOI18N
        jButton1.setText("ADD");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel16.setText("Password :");

        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/librarysystem/Images/broom.png"))); // NOI18N
        jButton2.setText("Clear");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel17.setText("Salary :");

        jButton3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/librarysystem/Images/paper.png"))); // NOI18N
        jButton3.setText("Search");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Table For View", "librarin", "Deleted librarin" }));

        jButton6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/librarysystem/Images/database.png"))); // NOI18N
        jButton6.setText("restore");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout BookSectionDownLayout = new javax.swing.GroupLayout(BookSectionDown);
        BookSectionDown.setLayout(BookSectionDownLayout);
        BookSectionDownLayout.setHorizontalGroup(
            BookSectionDownLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BookSectionDownLayout.createSequentialGroup()
                .addGroup(BookSectionDownLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(BookSectionDownLayout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(59, 59, 59)
                        .addComponent(jButton2))
                    .addGroup(BookSectionDownLayout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(BookSectionDownLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(BookSectionDownLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(BookSectionDownLayout.createSequentialGroup()
                                    .addComponent(jLabel13)
                                    .addGap(62, 62, 62)
                                    .addComponent(addresstxt, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(BookSectionDownLayout.createSequentialGroup()
                                    .addComponent(jLabel15)
                                    .addGap(88, 88, 88)
                                    .addComponent(citytxt, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(BookSectionDownLayout.createSequentialGroup()
                                    .addComponent(jLabel11)
                                    .addGap(48, 48, 48)
                                    .addComponent(contacttxt, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(BookSectionDownLayout.createSequentialGroup()
                                    .addComponent(jLabel17)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(salarytxt, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(BookSectionDownLayout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addGap(76, 76, 76)
                                .addComponent(nametxt, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(BookSectionDownLayout.createSequentialGroup()
                                .addComponent(jLabel16)
                                .addGap(55, 55, 55)
                                .addComponent(passtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(BookSectionDownLayout.createSequentialGroup()
                                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(72, 72, 72)
                                .addComponent(emailtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addGroup(BookSectionDownLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(BookSectionDownLayout.createSequentialGroup()
                        .addGroup(BookSectionDownLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(BookSectionDownLayout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 569, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BookSectionDownLayout.createSequentialGroup()
                                .addComponent(jButton9)
                                .addGap(63, 63, 63)
                                .addComponent(jButton3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton8)
                                .addGap(55, 55, 55)
                                .addComponent(jButton10)))
                        .addGap(14, 14, 14))
                    .addGroup(BookSectionDownLayout.createSequentialGroup()
                        .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(206, 206, 206)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(131, 131, 131))))
        );
        BookSectionDownLayout.setVerticalGroup(
            BookSectionDownLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BookSectionDownLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(BookSectionDownLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton10)
                    .addComponent(jButton8)
                    .addComponent(jButton3)
                    .addComponent(jButton9)
                    .addComponent(jButton2)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(BookSectionDownLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(BookSectionDownLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(BookSectionDownLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(nametxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jButton6))
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(BookSectionDownLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(BookSectionDownLayout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(BookSectionDownLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16)
                            .addComponent(passtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(BookSectionDownLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(emailtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(BookSectionDownLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13)
                            .addComponent(addresstxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(BookSectionDownLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(citytxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addGroup(BookSectionDownLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(contacttxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(BookSectionDownLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel17)
                            .addComponent(salarytxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BookSectionDownLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 403, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        jTabbedPane1.addTab("tab2", BookSectionDown);

        DownSide.add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -47, -1, 510));

        javax.swing.GroupLayout BGLayout = new javax.swing.GroupLayout(BG);
        BG.setLayout(BGLayout);
        BGLayout.setHorizontalGroup(
            BGLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(TopSide, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(DownSide, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        BGLayout.setVerticalGroup(
            BGLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BGLayout.createSequentialGroup()
                .addComponent(TopSide, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DownSide, javax.swing.GroupLayout.DEFAULT_SIZE, 482, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(BG, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(BG, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void LogOutMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LogOutMouseEntered
        LogOut.setBackground(new Color(0xFF0000));
    }//GEN-LAST:event_LogOutMouseEntered

    private void LogOutMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LogOutMouseExited
        LogOut.setBackground(new Color(0xEDECEC));
    }//GEN-LAST:event_LogOutMouseExited

    private void IssueSectiontopMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_IssueSectiontopMouseEntered

    }//GEN-LAST:event_IssueSectiontopMouseEntered

    private void IssueSectiontopMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_IssueSectiontopMouseClicked

        playMusic("sound\\click.wav");
        IssueSectiontop.setBackground(new Color(0xc5c5c5));
        BookSectiontop.setBackground(new Color(0xEDECEC));
        String employeeIdStr = JOptionPane.showInputDialog(this, "enter id number:");
        if (employeeIdStr == null || employeeIdStr.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "enter id number:");
            return;
        }

        int employeeId;
        try {
            employeeId = Integer.parseInt(employeeIdStr);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Please enter a valid employee id");
            return;
        }
        try {
            Class.forName("oracle.jdbc.driver.OracleDriver");
            Connection c = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE", "system", "123");
            String fetchSql = "SELECT * FROM librarain WHERE id = ?";
            PreparedStatement fetchPs = c.prepareStatement(fetchSql);
            fetchPs.setInt(1, employeeId);
            ResultSet rs = fetchPs.executeQuery();

            if (!rs.next()) {
                JOptionPane.showMessageDialog(this, "No employee was found with this number");
                return;
            }

            String currentName = rs.getString("name");
            String currentPassword = rs.getString("password");
            String currentEmail = rs.getString("email");
            String currentAddress = rs.getString("address");
            String currentCity = rs.getString("city");
            String currentContact = rs.getString("contactNO");
            String currentSalary = rs.getString("salary");

            String newName;
            do {
                newName = JOptionPane.showInputDialog(this, "Enter the employee's name:", currentName);
                if (newName == null) {
                    return;
                }
                if (newName.trim().isEmpty()) {
                    JOptionPane.showMessageDialog(this, "Please enter employee name.");
                } else if (!newName.matches("^[a-zA-Z\\s]{1,25}$")) {
                    JOptionPane.showMessageDialog(this, "Please enter a valid employee name (maximum 25 characters).");
                    newName = null;
                }
            } while (newName == null);

            String newPassword;
            do {
                newPassword = JOptionPane.showInputDialog(this, "Enter the employee password:", currentPassword);
                if (newPassword == null) {
                    return;
                }
                if (newPassword.trim().isEmpty()) {
                    JOptionPane.showMessageDialog(this, "Please enter a password.");
                } else if (!newPassword.matches("^\\d{8}$")) {
                    JOptionPane.showMessageDialog(this, "Please enter a correct password (8 digits).");
                    newPassword = null;
                }
            } while (newPassword == null);

            String newEmail;
            do {
                newEmail = JOptionPane.showInputDialog(this, "Enter the employee's email:", currentEmail);
                if (newEmail == null) {
                    return;
                }
                if (newEmail.trim().isEmpty()) {
                    JOptionPane.showMessageDialog(this, "Please enter an email.");
                } else if (!newEmail.matches("^[\\w.-]+@[a-zA-Z\\d.-]+\\.[a-zA-Z]{2,6}$")) {
                    JOptionPane.showMessageDialog(this, "Please enter a valid email.");
                    newEmail = null;
                }
            } while (newEmail == null);

            String newAddress;
            do {
                newAddress = JOptionPane.showInputDialog(this, "Enter the employee's address:", currentAddress);
                if (newAddress == null) {
                    return;
                }
                if (newAddress.trim().isEmpty()) {
                    JOptionPane.showMessageDialog(this, "Please enter an address.");
                } else if (!newAddress.matches("^.{1,35}$")) {
                    JOptionPane.showMessageDialog(this, "Please enter a valid address (maximum 35 characters).");
                    newAddress = null;
                }
            } while (newAddress == null);

            String newCity;
            do {
                newCity = JOptionPane.showInputDialog(this, "Enter the employee's city:", currentCity);
                if (newCity == null) {
                    return;
                }
                if (newCity.trim().isEmpty()) {
                    JOptionPane.showMessageDialog(this, "Please enter a city.");
                } else if (!newCity.matches("^[a-zA-Z\\s]{1,25}$")) {
                    JOptionPane.showMessageDialog(this, "Please enter a valid city (max. 25 characters).");
                    newCity = null;
                }
            } while (newCity == null);

            String newContact;
            do {
                newContact = JOptionPane.showInputDialog(this, "Enter the employee's contact number:", currentContact);
                if (newContact == null) {
                    return;
                }
                if (newContact.trim().isEmpty()) {
                    JOptionPane.showMessageDialog(this, "Please enter a contact number.");
                } else if (!newContact.matches("^\\d{11}$")) {
                    JOptionPane.showMessageDialog(this, "Please enter a valid contact number (11 digits).");
                    newContact = null;
                }
            } while (newContact == null);

            String newSalaryStr;
            do {
                newSalaryStr = JOptionPane.showInputDialog(this, "Enter the employee's salary:", currentSalary);
                if (newSalaryStr == null) {
                    return;
                }
                if (newSalaryStr.trim().isEmpty()) {
                    JOptionPane.showMessageDialog(this, "Please enter a salary.");
                } else if (!newSalaryStr.matches("^\\d+(\\.\\d{1,2})?$")) {
                    JOptionPane.showMessageDialog(this, "Please enter a valid salary.");
                    newSalaryStr = null;
                }
            } while (newSalaryStr == null);

            double newSalary;
            try {
                newSalary = Double.parseDouble(newSalaryStr);
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Please enter a valid salary.");
                return;
            }

            String updateSql = "UPDATE librarain SET name = ?, password = ?, email = ?, address = ?, city = ?, contactNO = ?, salary = ? WHERE id = ?";
            PreparedStatement updatePs = c.prepareStatement(updateSql);
            updatePs.setString(1, newName);
            updatePs.setString(2, newPassword);
            updatePs.setString(3, newEmail);
            updatePs.setString(4, newAddress);
            updatePs.setString(5, newCity);
            updatePs.setString(6, newContact);
            updatePs.setDouble(7, newSalary);
            updatePs.setInt(8, employeeId);

            int rows = updatePs.executeUpdate();
            JOptionPane.showMessageDialog(this, rows + " The employee has been modified successfully.");
        } catch (ClassNotFoundException | SQLException ex) {
            System.out.println(ex.getMessage());
        }
    }//GEN-LAST:event_IssueSectiontopMouseClicked

    private void IssueSectiontopMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_IssueSectiontopMouseExited

    }//GEN-LAST:event_IssueSectiontopMouseExited

    private void BookSectiontopMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BookSectiontopMouseClicked
        playMusic("sound\\click.wav");
        IssueSectiontop.setBackground(new Color(0xEDECEC));
        BookSectiontop.setBackground(new Color(0xc5c5c5));
        jTabbedPane1.setSelectedIndex(1);
    }//GEN-LAST:event_BookSectiontopMouseClicked

    private void BookSectiontopMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BookSectiontopMouseEntered
    }//GEN-LAST:event_BookSectiontopMouseEntered

    private void BookSectiontopMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BookSectiontopMouseExited
    }//GEN-LAST:event_BookSectiontopMouseExited

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        playMusic("sound\\click.wav");

        try {
            String name = nametxt.getText();
            String passwordStr = passtxt.getText();
            String email = emailtxt.getText();
            String address = addresstxt.getText();
            String city = citytxt.getText();
            String contactStr = contacttxt.getText();
            String salaryStr = salarytxt.getText();

            String nameRegex = "^[a-zA-Z\\\\s]{3,25}$";
            String emailRegex = "^[\\w.-]+@[a-zA-Z\\d.-]+\\.[a-zA-Z]{2,6}$";
            String passwordRegex = "^\\d{8}$";
            String addressRegex = "^.{1,35}$";
            String cityRegex = "^[a-zA-Z\\s]{1,25}$";
            String contactRegex = "^\\d{11}$";
            String salaryRegex = "^\\d+(\\.\\d{1,2})?$";

            if (!name.matches(nameRegex)) {
                JOptionPane.showMessageDialog(this, "Please  Enter AT NAME Only Chracters");
                return;
            }
            if (!passwordStr.matches(passwordRegex)) {
                JOptionPane.showMessageDialog(this, "Please enter a valid 8-digit password.");
                return;
            }
            if (!email.matches(emailRegex)) {
                JOptionPane.showMessageDialog(this, "Please enter a valid email");
                return;
            }
            if (!address.matches(addressRegex)) {
                JOptionPane.showMessageDialog(this, "Please enter a valid address (max 35 characters).");
                return;
            }
            if (!city.matches(cityRegex)) {
                JOptionPane.showMessageDialog(this, "Please enter a valid city (max 25 characters).");
                return;
            }
            if (!contactStr.matches(contactRegex)) {
                JOptionPane.showMessageDialog(this, "Please enter a valid 11-digit contactNo And Make Sure It Starts with 01");
                return;
            }
            if (!salaryStr.matches(salaryRegex)) {
                JOptionPane.showMessageDialog(this, "Please enter a valid salary.");
                return;
            }

            int password = Integer.parseInt(passwordStr);
            int contact = Integer.parseInt(contactStr);
            double salary = Double.parseDouble(salaryStr);

            Class.forName("oracle.jdbc.driver.OracleDriver");
            Connection c = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE", "system", "123");
            String sql = "insert into librarain values(IDSEQ.nextval,?,?,?,?,?,?,?)";
            PreparedStatement ps = c.prepareStatement(sql);
            ps.setString(1, name);
            ps.setInt(2, password);
            ps.setString(3, email);
            ps.setString(4, address);
            ps.setString(5, city);
            ps.setInt(6, contact);
            ps.setDouble(7, salary);

            int rows = ps.executeUpdate();
            JOptionPane.showMessageDialog(this, rows + " added");
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Please enter valid numeric values for password, contact number, and salary.");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void passtxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passtxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passtxtActionPerformed

    private void citytxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_citytxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_citytxtActionPerformed

    private void contacttxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_contacttxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_contacttxtActionPerformed

    private void LogOutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LogOutMouseClicked
        playMusic("sound\\Shutdown.wav");
        new HomePage().setVisible(true);
        dispose();
    }//GEN-LAST:event_LogOutMouseClicked

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        playMusic("sound\\click.wav");

        try {
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            model.setRowCount(0);
            String sql = "";
            Class.forName("oracle.jdbc.driver.OracleDriver");

            Connection c = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE", "system", "123");;
            if (jComboBox1.getSelectedIndex() == 1) {
                sql = "SELECT * FROM librarain ORDER BY id";
            }
            if (jComboBox1.getSelectedIndex() == 2) {
                sql = "SELECT * FROM restore_librarain ORDER BY id";
            }

            Statement st = c.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                model.addRow(new Object[]{rs.getInt(1), rs.getString(2), rs.getInt(3), rs.getString(4), rs.getString(5), rs.getString(6), rs.getInt(7), rs.getDouble(8)});
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }

    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        playMusic("sound\\click.wav");

        nametxt.setText("");
        passtxt.setText("");
        contacttxt.setText("");
        emailtxt.setText("");
        citytxt.setText("");
        addresstxt.setText("");
        salarytxt.setText("");

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        playMusic("sound\\click.wav");

        String[] options = {"ID", "Name", "Password", "Email", "Address", "City", "Contact Number", "Salary"};
        String choice = (String) JOptionPane.showInputDialog(this, "Select Search Type:", "Search for Employee",
                JOptionPane.QUESTION_MESSAGE, null, options, options[0]);

        if (choice != null) {
            String query = "";
            String userInput = JOptionPane.showInputDialog(this, "Enter " + choice + " to search:");
            if (userInput != null && !userInput.trim().isEmpty()) {
                try {
                    Class.forName("oracle.jdbc.driver.OracleDriver");
                    Connection c = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE", "system", "123");

                    PreparedStatement ps = null;
                    String message = "";

                    switch (choice) {
                        case "ID":
                            query = "SELECT * FROM librarain WHERE id = ?";
                            ps = c.prepareStatement(query);
                            ps.setInt(1, Integer.parseInt(userInput));
                            message = "No employee found with ID: " + userInput;
                            break;
                        case "Name":
                            query = "SELECT * FROM librarain WHERE name LIKE ?";
                            ps = c.prepareStatement(query);
                            ps.setString(1, "%" + userInput + "%");
                            message = "No employee found with name: " + userInput;
                            break;
                        case "Password":
                            query = "SELECT * FROM librarain WHERE password = ?";
                            ps = c.prepareStatement(query);
                            ps.setInt(1, Integer.parseInt(userInput));
                            message = "No employee found with password: " + userInput;
                            break;
                        case "Email":
                            query = "SELECT * FROM librarain WHERE email LIKE ?";
                            ps = c.prepareStatement(query);
                            ps.setString(1, "%" + userInput + "%");
                            message = "No employee found with email: " + userInput;
                            break;
                        case "Address":
                            query = "SELECT * FROM librarain WHERE address LIKE ?";
                            ps = c.prepareStatement(query);
                            ps.setString(1, "%" + userInput + "%");
                            message = "No employee found with address: " + userInput;
                            break;
                        case "City":
                            query = "SELECT * FROM librarain WHERE city LIKE ?";
                            ps = c.prepareStatement(query);
                            ps.setString(1, "%" + userInput + "%");
                            message = "No employee found in city: " + userInput;
                            break;
                        case "Contact Number":
                            query = "SELECT * FROM librarain WHERE contactNO = ?";
                            ps = c.prepareStatement(query);
                            ps.setString(1, userInput);
                            message = "No employee found with contact number: " + userInput;
                            break;
                        case "Salary":
                            query = "SELECT * FROM librarain WHERE salary = ?";
                            ps = c.prepareStatement(query);
                            ps.setDouble(1, Double.parseDouble(userInput));
                            message = "No employee found with salary: " + userInput;
                            break;
                        default:
                            JOptionPane.showMessageDialog(this, "Unrecognized search type.");
                            return;
                    }

                    ResultSet rs = ps.executeQuery();
                    DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
                    dtm.setRowCount(0);
                    boolean found = false;
                    while (rs.next()) {
                        found = true;
                        dtm.addRow(new Object[]{
                            rs.getInt("id"),
                            rs.getString("name"),
                            rs.getInt("password"),
                            rs.getString("email"),
                            rs.getString("address"),
                            rs.getString("city"),
                            rs.getString("contactNO"),
                            rs.getDouble("salary")
                        });
                    }

                    if (!found) {
                        JOptionPane.showMessageDialog(this, message);
                    }
                } catch (ClassNotFoundException | SQLException ex) {
                    System.out.println(ex.getMessage());
                } catch (NumberFormatException ex) {
                    JOptionPane.showMessageDialog(this, "Please enter a valid value.");
                }
            } else {
                JOptionPane.showMessageDialog(this, "Please enter " + choice + " to search.");
            }


        }    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        playMusic("sound\\click.wav");

        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        playMusic("sound\\click.wav");

        try {
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            Class.forName("oracle.jdbc.driver.OracleDriver");
            Connection c = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE", "system", "123");

            int CurrentRow = jTable1.getSelectedRow();
            Object data = null;
            String sql = "";
            String sqlInsert = "";

            if (CurrentRow >= 0 && CurrentRow < model.getRowCount()) {
                data = model.getValueAt(CurrentRow, 0);
            } else {
                playMusic("sound\\Error.wav");
                JOptionPane.showMessageDialog(this, "No rows selected");
            }
            Object id = model.getValueAt(CurrentRow, 0);
            Object name = model.getValueAt(CurrentRow, 1);
            Object paassword = model.getValueAt(CurrentRow, 2);
            Object email = model.getValueAt(CurrentRow, 3);
            Object adddress = model.getValueAt(CurrentRow, 4);
            Object city = model.getValueAt(CurrentRow, 5);
            Object contact = model.getValueAt(CurrentRow, 6);
            Object salary = model.getValueAt(CurrentRow, 7);

            if (jComboBox1.getSelectedIndex() == 1) {
                sqlInsert = "insert into restore_librarain values(?,?,?,?,?,?,?,?)";
                sql = "delete from LIBRARAIN where ID = " + data;
            } else if (jComboBox1.getSelectedIndex() == 2) {
                sql = "delete from restore_librarain where id =" + data;
            }

            PreparedStatement psDelete = c.prepareStatement(sql);

            int rows = psDelete.executeUpdate();
            if (jComboBox1.getSelectedIndex() == 1) {
                PreparedStatement psInsert = c.prepareStatement(sqlInsert);

                psInsert.setInt(1, Integer.parseInt(String.valueOf(id)));
                psInsert.setString(2, String.valueOf(name));
                psInsert.setInt(3, Integer.parseInt(String.valueOf(paassword)));
                psInsert.setString(4, String.valueOf(email));
                psInsert.setString(5, String.valueOf(adddress));
                psInsert.setString(6, String.valueOf(city));
                psInsert.setInt(7, Integer.parseInt(String.valueOf(contact)));
                psInsert.setDouble(8, Double.parseDouble(String.valueOf(salary)));

                psInsert.executeUpdate();
                psInsert.close();
            }

            JOptionPane.showMessageDialog(this, rows + " rows deleted");
            model.removeRow(CurrentRow);

            psDelete.close();
            c.close();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(LibraryMain.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(LibraryMain.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_jButton9ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        int selectedRowIndex = jTable1.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();

        Object name = null;
        Object Pass = null;
        Object Address = null;
        Object City = null;
        Object Email = null;
        Object salary = null;
        Object contact = null;

        if (selectedRowIndex >= 0) {
            name = model.getValueAt(selectedRowIndex, 1);
            Pass = model.getValueAt(selectedRowIndex, 2);
            Email = model.getValueAt(selectedRowIndex, 3);
            Address = model.getValueAt(selectedRowIndex, 4);
            City = model.getValueAt(selectedRowIndex, 5);
            contact = model.getValueAt(selectedRowIndex, 6);
            salary = model.getValueAt(selectedRowIndex, 7);
        }
        nametxt.setText(name.toString());
        passtxt.setText(Pass.toString());
        emailtxt.setText(Email.toString());
        addresstxt.setText(Address.toString());
        citytxt.setText(City.toString());
        contacttxt.setText(contact.toString());
        salarytxt.setText(salary.toString());


    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        playMusic("sound\\click.wav");

        try {
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            Class.forName("oracle.jdbc.driver.OracleDriver");
            Connection c = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE", "system", "123");

            int CurrentRow = jTable1.getSelectedRow();

            if (CurrentRow < 0) {
                playMusic("sound\\Error.wav");

                JOptionPane.showMessageDialog(this, "No rows selected");
                return;
            }

            String sql = "";
            String sqlInsert = "";

            Object id = model.getValueAt(CurrentRow, 0);
            Object name = model.getValueAt(CurrentRow, 1);
            Object password = model.getValueAt(CurrentRow, 2);
            Object email = model.getValueAt(CurrentRow, 3);
            Object address = model.getValueAt(CurrentRow, 4);
            Object city = model.getValueAt(CurrentRow, 5);
            Object contact = model.getValueAt(CurrentRow, 6);
            Object salary = model.getValueAt(CurrentRow, 7);

            if (jComboBox1.getSelectedIndex() == 0) {
                JOptionPane.showMessageDialog(this, "invailed table");
                playMusic("sound\\Error.wav");

            }
            if (jComboBox1.getSelectedIndex() == 1) {
                JOptionPane.showMessageDialog(this, "invailed table");
                playMusic("sound\\Error.wav");

            }

            if (jComboBox1.getSelectedIndex() == 2) {
                sqlInsert = "insert into librarain values(?,?,?,?,?,?,?,?)";
                sql = "delete from restore_librarain where ID = ?";
            }

            PreparedStatement psDelete = c.prepareStatement(sql);
            psDelete.setObject(1, id);

            psDelete.executeUpdate();

            if (jComboBox1.getSelectedIndex() == 2) {
                PreparedStatement psInsert = c.prepareStatement(sqlInsert);

                psInsert.setInt(1, Integer.parseInt(String.valueOf(id)));
                psInsert.setString(2, String.valueOf(name));
                psInsert.setInt(3, Integer.parseInt(String.valueOf(password)));
                psInsert.setString(4, String.valueOf(email));
                psInsert.setString(5, String.valueOf(address));
                psInsert.setString(6, String.valueOf(city));
                psInsert.setInt(7, Integer.parseInt(String.valueOf(contact)));
                psInsert.setDouble(8, Double.parseDouble(String.valueOf(salary)));

                psInsert.executeUpdate();
                psInsert.close();
            }

            JOptionPane.showMessageDialog(this, "The Row Is Restored");

        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(this, "Database driver not found: " + ex.getMessage());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Database error: " + ex.getMessage());
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    public void playMusic(String file) {
        try {
            // حدد مسار ملف الصوت هنا
            File soundFile = new File(file);
            if (!soundFile.exists()) {
                throw new IOException("File not found: " + soundFile.getAbsolutePath());
            }
            Clip clip = AudioSystem.getClip();
            clip.open(AudioSystem.getAudioInputStream(soundFile));
            clip.start();
        } catch (UnsupportedAudioFileException ex) {
            System.err.println("Unsupported audio file format.");
            ex.printStackTrace();
        } catch (LineUnavailableException ex) {
            System.err.println("Audio line for playing back is unavailable.");
            ex.printStackTrace();
        } catch (IOException ex) {
            System.err.println("I/O error while playing the audio file.");
            ex.printStackTrace();
        } catch (Exception ex) {
            System.err.println("An unexpected error occurred.");
            ex.printStackTrace();
        }

    }

    public boolean regex() {
        if (Words(nametxt.getText(), "Name Must Be Only Words") && Numbers(passtxt.getText(), " Password Must Be only numbers")
                && Words(emailtxt.getText(), "Email Must Be Only Words") && Words(addresstxt.getText(), "Address Only Words")
                && Words(citytxt.getText(), "City Must Be Only Words") && Contact(contacttxt.getText(), "ContactNo Must Be Only Numbers")) {
            return true;

        }
        return false;
    }

    public boolean Words(String text, String massage) {
        if (!text.matches("[a-zA-Z]+")) {
            JOptionPane.showMessageDialog(this, massage);
            return false;
        }
        return true;
    }

    public boolean Numbers(String text, String massage) {
        if (!text.matches("[0-9]+")) {
            JOptionPane.showMessageDialog(this, massage);
            return false;
        }
        return true;
    }

    public boolean Contact(String text, String massage) {
        if (!text.matches("[0-9]+")) {
            JOptionPane.showMessageDialog(this, massage);
            return false;
        }
        if (text.length() != 11) {
            JOptionPane.showMessageDialog(this, "Number Must Be 11");
            return false;
        }
        if (!text.startsWith("01")) {
            JOptionPane.showMessageDialog(this, "Number Must Starts With 01");
            return false;
        }

        return true;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminMain().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel BG;
    private javax.swing.JPanel BookSectionDown;
    private javax.swing.JPanel BookSectiontop;
    private javax.swing.JPanel DownSide;
    private javax.swing.JPanel Home;
    private javax.swing.JPanel IssueSectiontop;
    private javax.swing.JPanel LogOut;
    private javax.swing.JPanel TopSide;
    private javax.swing.JTextField addresstxt;
    private javax.swing.JTextField citytxt;
    private javax.swing.JTextField contacttxt;
    private javax.swing.JTextField emailtxt;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField nametxt;
    private javax.swing.JTextField passtxt;
    private javax.swing.JTextField salarytxt;
    // End of variables declaration//GEN-END:variables
}
